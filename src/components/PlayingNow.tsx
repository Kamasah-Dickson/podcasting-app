import { useState, useContext } from "react";
import AudioPlayer from "react-h5-audio-player";
import "react-h5-audio-player/lib/styles.css";
import me from "../img/EgLF6Jmi_4x.jpg";
import Image from "next/image";
import Head from "next/head";
import { BsRepeat1, BsPlayFill } from "react-icons/bs";
import { FiPause } from "react-icons/fi";
import { PodcastContext } from "../context/podcastContext";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

function PlayingNow() {
	const [title, setTitle] = useState("Podcast");
	const { playSinglePodcast, togglePlaying } = useContext(PodcastContext);

	const customIcons = {
		play: <BsPlayFill size={35} />,
		pause: <FiPause size={35} />,
		rewind: (
			<svg
				stroke="currentColor"
				fill="none"
				strokeWidth="2.25"
				viewBox="0 0 24 24"
				strokeLinecap="round"
				strokeLinejoin="round"
				height="17"
				width="17"
				xmlns="http://www.w3.org/2000/svg"
			>
				<desc></desc>
				<path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
				<path d="M15 4.55a8 8 0 0 0 -6 14.9m0 -4.45v5h-5"></path>
				<line x1="18.37" y1="7.16" x2="18.37" y2="7.17"></line>
				<line x1="13" y1="19.94" x2="13" y2="19.95"></line>
				<line x1="16.84" y1="18.37" x2="16.84" y2="18.38"></line>
				<line x1="19.37" y1="15.1" x2="19.37" y2="15.11"></line>
				<line x1="19.94" y1="11" x2="19.94" y2="11.01"></line>
			</svg>
		),
		forward: (
			<svg
				stroke="currentColor"
				fill="none"
				strokeWidth="2.25"
				viewBox="0 0 24 24"
				strokeLinecap="round"
				strokeLinejoin="round"
				height="17"
				width="17"
				xmlns="http://www.w3.org/2000/svg"
			>
				<desc></desc>
				<path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
				<path d="M9 4.55a8 8 0 0 1 6 14.9m0 -4.45v5h5"></path>
				<line x1="5.63" y1="7.16" x2="5.63" y2="7.17"></line>
				<line x1="4.06" y1="11" x2="4.06" y2="11.01"></line>
				<line x1="4.63" y1="15.1" x2="4.63" y2="15.11"></line>
				<line x1="7.16" y1="18.37" x2="7.16" y2="18.38"></line>
				<line x1="11" y1="19.94" x2="11" y2="19.95"></line>
			</svg>
		),
		loop: <BsRepeat1 />,
	};

	function Error() {
		toast.error(
			"There was an error playing the podcast check your internet or the data for the podcast is broken"
		);
	}

	return (
		<>
			<Head key="111">
				<title>{title}</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div className={`sm:absolute sm:right-0 sm:top-0 lg:relative`}>
				<div
					className={`${
						togglePlaying ? "hidden lg:block" : " block"
					} my-scroll my-scroll mx-auto mb-3 h-screen w-full max-w-[500px] rounded-lg p-1 py-5 sm:fixed sm:right-0 sm:z-30 sm:mt-0 sm:flex sm:h-screen sm:items-start sm:bg-[#080225e3] lg:relative lg:h-fit lg:bg-transparent`}
				>
					<div className="mx-auto mb-10 w-full max-w-[350px] rounded-lg bg-[#2d0796] p-5 sm:max-w-[350px] md:p-5">
						<div className="h-[270px] w-full rounded-2xl p-1 md:p-2">
							<Image
								src={
									playSinglePodcast.imageUrl ? playSinglePodcast.imageUrl : me
								}
								priority={true}
								alt={playSinglePodcast.name}
								width={100}
								height={100}
								className=" mx-auto h-full w-[250px] rounded-2xl object-cover sm:w-full"
							/>
						</div>
						<div className="my-2 text-center text-white">
							{playSinglePodcast.description ? (
								<h1 className=" py-2 text-xl font-bold">
									{playSinglePodcast?.description?.length > 45
										? playSinglePodcast?.description?.slice(0, 45) + "..."
										: playSinglePodcast?.description?.slice(0, 45)}
								</h1>
							) : (
								<h1 className=" text-2xl">
									<span className="text-purple-500">Po</span>dcast.
								</h1>
							)}
							<div className="scrolling-carousel">
								{playSinglePodcast.name ? (
									<h1 className="scrolling-text text-right">
										Now playing - {playSinglePodcast.name}
									</h1>
								) : (
									<h1>Now playing - nothing</h1>
								)}
							</div>
						</div>
						<AudioPlayer
							autoPlay={false}
							src={playSinglePodcast.audioUrl}
							loop={false}
							className="me"
							customIcons={customIcons}
							onError={Error}
							volume={1}
							onPlay={() =>
								setTitle(
									playSinglePodcast?.description?.length > 45
										? playSinglePodcast?.description?.slice(0, 45) + "..."
										: playSinglePodcast?.description?.slice(0, 45)
								)
							}
						/>
						<ToastContainer limit={1} autoClose={5500} />
					</div>
				</div>
			</div>
		</>
	);
}

export default PlayingNow;
